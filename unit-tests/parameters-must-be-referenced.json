{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "used": {
            "type": "string"
        },
        "used2": {
            "type": "string"
        },
        "used3": {
            "type": "string"
        },
        "notUsed": {
            "type": "string"
        },
        "notUsed2": {
            "type": "string"
        },
        "__skipme": {
            "type": "bool" //this should be ignored because it starts with two underscores
        }
    },
    "variables": {
        "foo": "[concat(parameters('used'), '')]",
        "bar": "parameters('notused')", //this should be flagged
        "bar2": "trim( parameters('notused') )]", //this should be flagged TODO [[ escape sequence
        "baz": "[ parameters ( 'used2' ) ]",
        "baz2": "[trim ( parameters ( 'used3' ) )]",
        "used": "this var is used",
        "used2": "this var is also used",
        "notUsed": "this is never used",
        "notUsed2": "this is never used",
        "__skipme": "this should be ignored",
        "copy": [ //this isn't used but current tests should ignore "copy" var
            {
                "name": "top-level-object-array",
                "count": 5,
                "input": {
                    "name": "[concat('myDataDisk', copyIndex('top-level-object-array', 1))]",
                    "diskSizeGB": "1",
                    "diskIndex": "[copyIndex('top-level-object-array')]"
                }
            },
            {
                "name": "top-level-string-array",
                "count": 5,
                "input": "[concat('myDataDisk', copyIndex('top-level-string-array', 1))]"
            },
            {
                "name": "top-level-integer-array",
                "count": 5,
                "input": "[copyIndex('top-level-integer-array')]"
            }
        ]
    },
    "resources": [
    ],
    "outputs": {
        "VarTest": {
            "type": "array",
            "value": [
                "concat(variables('notused'))]", //this should be flagged
                "concat(variables ('notused' ))]", //this should be flagged TODO [[ escape sequence
                "[variables('used')]",
                "[concat(variables('used2'))]"
            ]
        },
        "VarHold": {
            "type": "object",
            "value": {
                "key": "[concat(variables('bar'), variables('bar2'), variables('baz'), variables('foo'), variables('baz2'))]"
            }
        }
    }
}